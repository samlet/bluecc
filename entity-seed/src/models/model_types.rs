use crate::models::security_types::*;
use crate::models::example_types::*;
use crate::models::common_types::*;
use crate::models::party_types::*;


#[derive(Deserialize, Debug)]
pub struct SeedRecords {
    pub items: Vec<SeedTypes>
}

#[derive(Deserialize, Debug)]
pub enum SeedTypes {
    X509IssuerProvision(X509IssuerProvision),
    UserLogin(UserLogin),
    UserLoginPasswordHistory(UserLoginPasswordHistory),
    UserLoginHistory(UserLoginHistory),
    UserLoginSession(UserLoginSession),
    SecurityGroup(SecurityGroup),
    SecurityGroupPermission(SecurityGroupPermission),
    SecurityPermission(SecurityPermission),
    UserLoginSecurityGroup(UserLoginSecurityGroup),
    ProtectedView(ProtectedView),
    TarpittedLoginView(TarpittedLoginView),
    Example(Example),
    ExampleItem(ExampleItem),
    ExampleStatus(ExampleStatus),
    ExampleType(ExampleType),
    ExampleFeature(ExampleFeature),
    ExampleFeatureAppl(ExampleFeatureAppl),
    ExampleFeatureApplType(ExampleFeatureApplType),
    DataSource(DataSource),
    DataSourceType(DataSourceType),
    EmailTemplateSetting(EmailTemplateSetting),
    Enumeration(Enumeration),
    EnumerationType(EnumerationType),
    CountryCapital(CountryCapital),
    CountryCode(CountryCode),
    CountryTeleCode(CountryTeleCode),
    CountryAddressFormat(CountryAddressFormat),
    Geo(Geo),
    GeoAssoc(GeoAssoc),
    GeoAssocType(GeoAssocType),
    GeoPoint(GeoPoint),
    GeoType(GeoType),
    KeywordThesaurus(KeywordThesaurus),
    StandardLanguage(StandardLanguage),
    CustomMethod(CustomMethod),
    CustomMethodType(CustomMethodType),
    NoteData(NoteData),
    CustomTimePeriod(CustomTimePeriod),
    PeriodType(PeriodType),
    StatusItem(StatusItem),
    StatusType(StatusType),
    StatusValidChange(StatusValidChange),
    Uom(Uom),
    UomConversion(UomConversion),
    UomConversionDated(UomConversionDated),
    UomGroup(UomGroup),
    UomType(UomType),
    UserPreference(UserPreference),
    UserPrefGroupType(UserPrefGroupType),
    CustomScreen(CustomScreen),
    CustomScreenType(CustomScreenType),
    VisualThemeSet(VisualThemeSet),
    VisualTheme(VisualTheme),
    VisualThemeResource(VisualThemeResource),
    PortalPortlet(PortalPortlet),
    PortletCategory(PortletCategory),
    PortletPortletCategory(PortletPortletCategory),
    PortalPage(PortalPage),
    PortalPageColumn(PortalPageColumn),
    PortalPagePortlet(PortalPagePortlet),
    PortletAttribute(PortletAttribute),
    SystemProperty(SystemProperty),
    TelecomMethodType(TelecomMethodType),
    TelecomGatewayConfig(TelecomGatewayConfig),
    Addendum(Addendum),
    Agreement(Agreement),
    AgreementAttribute(AgreementAttribute),
    AgreementGeographicalApplic(AgreementGeographicalApplic),
    AgreementItem(AgreementItem),
    AgreementItemAttribute(AgreementItemAttribute),
    AgreementItemType(AgreementItemType),
    AgreementItemTypeAttr(AgreementItemTypeAttr),
    AgreementContent(AgreementContent),
    AgreementContentType(AgreementContentType),
    AgreementPartyApplic(AgreementPartyApplic),
    AgreementProductAppl(AgreementProductAppl),
    AgreementPromoAppl(AgreementPromoAppl),
    AgreementFacilityAppl(AgreementFacilityAppl),
    AgreementRole(AgreementRole),
    AgreementTerm(AgreementTerm),
    AgreementTermAttribute(AgreementTermAttribute),
    AgreementType(AgreementType),
    AgreementTypeAttr(AgreementTypeAttr),
    AgreementWorkEffortApplic(AgreementWorkEffortApplic),
    TermType(TermType),
    TermTypeAttr(TermTypeAttr),
    AgreementEmploymentAppl(AgreementEmploymentAppl),
    CommContentAssocType(CommContentAssocType),
    CommEventContentAssoc(CommEventContentAssoc),
    CommunicationEvent(CommunicationEvent),
    CommunicationEventProduct(CommunicationEventProduct),
    CommunicationEventPrpTyp(CommunicationEventPrpTyp),
    CommunicationEventPurpose(CommunicationEventPurpose),
    CommunicationEventRole(CommunicationEventRole),
    CommunicationEventType(CommunicationEventType),
    ContactMech(ContactMech),
    ContactMechAttribute(ContactMechAttribute),
    ContactMechLink(ContactMechLink),
    ContactMechPurposeType(ContactMechPurposeType),
    ContactMechType(ContactMechType),
    ContactMechTypeAttr(ContactMechTypeAttr),
    ContactMechTypePurpose(ContactMechTypePurpose),
    EmailAddressVerification(EmailAddressVerification),
    PartyContactMech(PartyContactMech),
    PartyContactMechPurpose(PartyContactMechPurpose),
    PostalAddress(PostalAddress),
    PostalAddressBoundary(PostalAddressBoundary),
    TelecomNumber(TelecomNumber),
    FtpAddress(FtpAddress),
    ValidContactMechRole(ValidContactMechRole),
    NeedType(NeedType),
    PartyNeed(PartyNeed),
    AddressMatchMap(AddressMatchMap),
    Affiliate(Affiliate),
    Party(Party),
    PartyIdentification(PartyIdentification),
    PartyIdentificationType(PartyIdentificationType),
    PartyGeoPoint(PartyGeoPoint),
    PartyAttribute(PartyAttribute),
    PartyCarrierAccount(PartyCarrierAccount),
    PartyClassification(PartyClassification),
    PartyClassificationGroup(PartyClassificationGroup),
    PartyClassificationType(PartyClassificationType),
    PartyContent(PartyContent),
    PartyContentType(PartyContentType),
    PartyDataSource(PartyDataSource),
    PartyGroup(PartyGroup),
    PartyIcsAvsOverride(PartyIcsAvsOverride),
    PartyInvitation(PartyInvitation),
    PartyInvitationGroupAssoc(PartyInvitationGroupAssoc),
    PartyInvitationRoleAssoc(PartyInvitationRoleAssoc),
    PartyNameHistory(PartyNameHistory),
    PartyNote(PartyNote),
    PartyProfileDefault(PartyProfileDefault),
    PartyRelationship(PartyRelationship),
    PartyRelationshipType(PartyRelationshipType),
    PartyRole(PartyRole),
    PartyStatus(PartyStatus),
    PartyType(PartyType),
    PartyTypeAttr(PartyTypeAttr),
    Person(Person),
    PriorityType(PriorityType),
    RoleType(RoleType),
    RoleTypeAttr(RoleTypeAttr),
    Vendor(Vendor),
}

